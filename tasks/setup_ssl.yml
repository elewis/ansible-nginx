
- file:
    name: "{{ nginx_home }}/ssl"
    state: directory
    owner: root
    group: root
  when: "'default-deny' in nginx_sites_enabled"
  become: yes
  tags: ssl tls

- name: deploy dummy default certs (for default-deny site)
  template:
    src: nginx/ssl/{{ item }}
    dest: "{{ nginx_home }}/ssl/{{ item }}"
  with_items:
    - nginx-self.key
    - nginx-self.pem
  when: "'default-deny' in nginx_sites_enabled"
  become: yes
  tags: ssl tls

- name: install certbot (1/2)
  package:
    name: certbot
    state: present
  become: yes
  tags: ssl tls letsencrypt

- name: install certbot (2/2)
  package:
    name: python3-certbot-nginx
    state: present
  become: yes
  tags: ssl tls letsencrypt

- name: create certbot webroot
  file:
    name: "/var/www/letsencrypt"
    state: directory
    owner: root
    group: root
  become: yes
  tags: ssl tls letsencrypt

- name: add missing certs
  command: /usr/bin/certbot certonly -n --webroot -d {{ item }} --webroot-path /var/www/letsencrypt
  args:
    creates: /etc/letsencrypt/live/{{ item }}
  with_items: "{{ nginx_sites_enabled }}"
  when: item != 'default-deny' and item != 'default'
  become: yes
  tags: ssl tls letsencrypt

- name: add cron job to renew certs
  cron:
    name: certbot-renew
    minute: 0
    hour: 0
    day: 1
    job: /usr/bin/certbot renew
    state: present
  become: yes
  tags: ssl tls letsencrypt
